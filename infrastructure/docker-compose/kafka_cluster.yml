version: '3.7'
services:
  schema-registry:
    image: confluentinc/cp-schema-registry:${KAFKA_VERSION}
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,EXTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-broker-1:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: BROKER://kafka-broker-1:9092,EXTERNAL://0.0.0.0:19092,CONTROLLER://kafka-broker-1:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka-broker-1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093'
      KAFKA_LOG_DIRS: '/tmp/kraft-logs'
      KAFKA_LOG_SEGMENT_BYTES: 16384
    volumes:
      - ./check_cluster_id.sh:/tmp/check_cluster_id.sh
      - ./cluster-id-dir:/tmp/cluster-id-dir
      - ./volumes/kafka/broker-1:/tmp/kraft-logs
    command: "bash -c '/tmp/check_cluster_id.sh && export CLUSTER_ID=$$(cat '/tmp/cluster-id-dir/clusterId') && /etc/confluent/docker/run'"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-broker-2:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-broker-2
    ports:
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: BROKER://kafka-broker-2:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://kafka-broker-2:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka-broker-2:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093'
      KAFKA_LOG_DIRS: '/tmp/kraft-logs'
      KAFKA_LOG_SEGMENT_BYTES: 16384
    volumes:
      - ./check_cluster_id.sh:/tmp/check_cluster_id.sh
      - ./cluster-id-dir:/tmp/cluster-id-dir
      - ./volumes/kafka/broker-2:/tmp/kraft-logs
    command: "bash -c '/tmp/check_cluster_id.sh && export CLUSTER_ID=$$(cat '/tmp/cluster-id-dir/clusterId') && /etc/confluent/docker/run'"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-broker-3:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-broker-3
    ports:
      - "39092:39092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_LISTENERS: BROKER://kafka-broker-3:9092,EXTERNAL://0.0.0.0:39092,CONTROLLER://kafka-broker-3:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka-broker-3:9092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093'
      KAFKA_LOG_DIRS: '/tmp/kraft-logs'
      KAFKA_LOG_SEGMENT_BYTES: 16384
    volumes:
      - ./check_cluster_id.sh:/tmp/check_cluster_id.sh
      - ./cluster-id-dir:/tmp/cluster-id-dir
      - ./volumes/kafka/broker-3:/tmp/kraft-logs
    command: "bash -c '/tmp/check_cluster_id.sh && export CLUSTER_ID=$$(cat '/tmp/cluster-id-dir/clusterId') && /etc/confluent/docker/run'"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-generator:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-generator
    volumes:
      - ./generate_cluster_id.sh:/tmp/generate_cluster_id.sh
      - ./cluster-id-dir:/tmp/cluster-id-dir
    command: "bash -c '/tmp/generate_cluster_id.sh'"
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  init-kafka:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # block until kafka is reachable
      kafka-topics --bootstrap-server kafka-broker-1:9092 --list

      echo -e 'Deleting kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic payment-request --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic payment-response --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic restaurant-approval-request --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic restaurant-approval-response --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic customer --delete --if-exists

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic payment-request --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic payment-response --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic restaurant-approval-request --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic restaurant-approval-response --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic customer --replication-factor 3 --partitions 3


      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --list
      "
    networks:
      - ${GLOBAL_NETWORK:-kafka}
